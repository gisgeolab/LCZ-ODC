version: '3.8'

name: lcz-odc

networks:
  lcz-odc-network:
    name: lcz-odc-network
    driver: bridge

services:
  postgres:
    container_name: lcz-odc_database
    hostname: ${ODC_DB_HOSTNAME}
    image: postgres:16.1-alpine3.18
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "${ODC_DB_USER}" ]
      timeout: 45s
      interval: 5s
      retries: 10
    restart: always
    environment:
      - POSTGRES_DB=${ODC_DB_DATABASE}
      - POSTGRES_PASSWORD=${ODC_DB_PASSWORD}
      - POSTGRES_USER=${ODC_DB_USER}
    volumes:
      - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - lcz-odc-network

  lcz-odc:
    container_name: lcz-odc
    image: lcz-odc:latest
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: .docker
    environment:
      ODC_DB_HOSTNAME: ${ODC_DB_HOSTNAME}
      ODC_DB_DATABASE: ${ODC_DB_DATABASE}
      ODC_DB_USER: ${ODC_DB_USER}
      ODC_DB_PASSWORD: ${ODC_DB_PASSWORD}
      DATACUBE_CONFIG_PATH: /home/asi/datacube_conf/datacube.conf
      NBK_SERVER_PASSWORD: ${NBK_SERVER_PASSWORD}
    volumes:
      - ./.docker/notebooks:/home/asi/notebooks
      - ./.docker/datacube_conf:/home/asi/datacube_conf
    ports:
      - 80:8888
    networks:
        - lcz-odc-network
